{"version":3,"sources":["components/fileUploadForm.js","App.js","reportWebVitals.js","index.js"],"names":["FileUploadForm","useState","bank","setBank","file","setFile","title","setTitle","data","setData","fetchData","formData","a","requestOptions","method","headers","body","fetch","then","res","json","response","transactionData","console","log","className","type","placeholder","onChange","e","target","value","files","onClick","preventDefault","FormData","fileData","bankData","append","get","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAoFeA,EAhFQ,WACnB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAEMC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAiBRC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,mCAAoC,OACpC,8BAA+B,yBAEnCC,KAAML,GAvBI,SAyBOM,MAAM,gCAAiCJ,GACvDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UA1BP,OAyBVC,EAzBU,OA2Bdd,EAASc,EAASf,OAClBG,EAAQY,EAASC,iBACjBC,QAAQC,IAAI,CAAElB,SAAS,CAAEE,SA7BX,2CAAH,sDAyDf,OACI,8BACI,iCACI,sBAAKiB,UAAU,eAAf,UACI,yCACA,uBAAOC,KAAK,OAAOC,YAAY,OAAOC,SAAU,SAACC,GAAD,OAAO1B,EAAQ0B,EAAEC,OAAOC,aAE5E,sBAAKN,UAAU,eAAf,UACI,oDACA,uBAAOC,KAAK,OAAOE,SAAU,SAACC,GAAD,OAAOxB,EAAQwB,EAAEC,OAAOE,MAAM,UAE/D,wBAAQN,KAAK,SAASK,MAAM,SAASE,QAlC5B,SAACJ,GAClBA,EAAEK,iBACF,IAAIvB,EAAW,IAAIwB,SACfC,EAAW,CAAEhC,QACbiC,EAAW,CAAEnC,QAGjBS,EAAS2B,OACL,WACAF,EAAShC,MAEbO,EAAS2B,OACL,eACAD,EAASnC,MAEbqB,QAAQC,IAAI,WAAYb,EAAS4B,IAAI,aACrChB,QAAQC,IAAI,eAAgBb,EAAS4B,IAAI,iBAGzC7B,EAAUC,IAeF,0BCpED6B,MARf,WACE,OACE,qBAAKf,UAAU,gBAAf,SACE,cAAC,EAAD,OCOSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8babcdbb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst FileUploadForm = () => {\r\n    const [bank, setBank] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [data, setData] = useState('');\r\n\r\n    const fetchData = async (formData) => {\r\n        // fetch(\"http://127.0.0.1:5000/\", {\r\n        //     method: \"GET\",\r\n        // }).then(res => res.json()).then((rep) => console.log(rep))\r\n        //     .catch(error => console.log(\"error\", error));\r\n\r\n        //GetRequest for taking data \r\n        // var result = await fetch(\"http://127.0.0.1:5000/\", {\r\n        //     method: \"GET\",\r\n        // }).then(res => res.json())\r\n        //     .catch(error => console.log(\"error\", error));\r\n        // setTitle(result.title);\r\n        // setData(result.transactionData);\r\n        // console.log({ title }, { data });\r\n\r\n\r\n        // Working Post Request\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Access-Control-Allow-Credentials': 'true',\r\n                'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n            },\r\n            body: formData,\r\n        };\r\n        var response = await fetch('http://127.0.0.1:5000/getData', requestOptions)\r\n            .then(res => res.json());\r\n        setTitle(response.title)\r\n        setData(response.transactionData);\r\n        console.log({ title }, { data })\r\n\r\n    }\r\n\r\n    //For Form Submission \r\n    const onFileUpload = (e) => {\r\n        e.preventDefault();\r\n        var formData = new FormData();\r\n        var fileData = { file }\r\n        var bankData = { bank }\r\n\r\n        //Form data for keeping all the form data\r\n        formData.append(\r\n            \"acc_file\",\r\n            fileData.file\r\n        );\r\n        formData.append(\r\n            \"bank_details\",\r\n            bankData.bank\r\n        );\r\n        console.log(\"acc_file\", formData.get(\"acc_file\"));\r\n        console.log(\"bank_details\", formData.get(\"bank_details\"));\r\n\r\n        //Fetch command for putting post request \r\n        fetchData(formData);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form >\r\n                <div className=\"form-control\">\r\n                    <label>Bank</label>\r\n                    <input type=\"text\" placeholder=\"Bank\" onChange={(e) => setBank(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label>Account Summary</label>\r\n                    <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n                </div>\r\n                <button type=\"submit\" value=\"Submit\" onClick={onFileUpload}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUploadForm\r\n","import FileUploadForm from './components/fileUploadForm';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <FileUploadForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}